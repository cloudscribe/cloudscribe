document.addEventListener("DOMContentLoaded", (function () { var e = document.querySelectorAll("[data-dropzone]"); window.cloudscribeDropAndCrop = { openServerBrowser: function (e) { $("#fileBrowseDialog").find("iframe").attr("src", e), $("#fileBrowseDialog").modal("show") }, closeServerBrowser: function () { $("#fileBrowseDialog").modal("hide") }, imageItems: [], buildImageEditor: function (e) { var t = { dropZoneDiv: e, setupCropper: function () { new Number(this.dropZoneDiv.dataset.resizeWidth), new Number(this.dropZoneDiv.dataset.resizeHeight); var e = new Number(this.dropZoneDiv.dataset.cropAreaWidth), t = new Number(this.dropZoneDiv.dataset.cropAreaHeight), i = { viewport: { width: e, height: t }, boundary: { width: e, height: t } }; this.cropper = new Croppie(this.fullSizeImage, i); var d = document.getElementById(this.dropZoneDiv.id + "-save-crop"); if (d) { var r = this; d.classList.remove("collapse"), d.onclick = function () { if (r.cropper) { var e = r.cropper.get(), t = new Number(e.points[0]), i = new Number(e.points[1]), d = new Number(e.points[2]) - t, a = new Number(e.points[3]) - i, s = new Number(r.dropZoneDiv.dataset.resizeWidth), o = d / a, n = Math.round(s / o), l = new FormData; l.append("sourceFilePath", r.fullSizeInput.value), l.append("x1", t), l.append("y1", i), l.append("widthToCrop", d), l.append("heightToCrop", a), l.append("finalWidth", r.dropZoneDiv.dataset.resizeWidth), l.append("finalHeight", n), $.ajax({ type: "POST", processData: !1, contentType: !1, headers: { "X-CSRFToken": r.dropZoneDiv.dataset.antiForgeryToken }, dataType: "json", url: r.dropZoneDiv.dataset.fileCropUrl, data: l }).done((function (e, t, i) { r.handleCropResult(e) })).fail((function (e, t, i) { alert(t) })) } } } }, destroyCropper: function () { if (this.cropper) { this.cropper.destroy(), this.cropper = void 0; var e = document.getElementById(this.dropZoneDiv.id + "-save-crop"); e && e.classList.add("collapse") } }, clearInputs: function () { this.dropZoneDiv.dataset.targetFullsizeInputId && (this.fullSizeInput = document.getElementById(this.dropZoneDiv.dataset.targetFullsizeInputId), this.fullSizeInput.value = ""), this.dropZoneDiv.dataset.targetResizedInputId && (this.resizedInput = document.getElementById(this.dropZoneDiv.dataset.targetResizedInputId), this.resizedInput.value = ""), this.dropZoneDiv.dataset.targetThumbInputId && (this.thumbInput = document.getElementById(this.dropZoneDiv.dataset.targetThumbInputId), this.thumbInput.value = "") }, clearImages: function () { this.destroyCropper(), this.dropZoneDiv.dataset.targetFullsizeImageId && this.dropZoneDiv.dataset.fullsizePlaceholderImage && (document.getElementById(this.dropZoneDiv.dataset.targetFullsizeImageId).src = this.dropZoneDiv.dataset.fullsizePlaceholderImage), this.dropZoneDiv.dataset.targetResizedImageId && this.dropZoneDiv.dataset.resizedPlaceholderImage && (document.getElementById(this.dropZoneDiv.dataset.targetResizedImageId).src = this.dropZoneDiv.dataset.resizedPlaceholderImage), this.dropZoneDiv.dataset.targetThumbImageId && this.dropZoneDiv.dataset.thumbPlaceholderImage && (document.getElementById(this.dropZoneDiv.dataset.targetThumbImageId).src = this.dropZoneDiv.dataset.thumbPlaceholderImage) }, handleCropResult: function (e) { this.destroyCropper(), this.fullSizeImage.src = e.resizedUrl, this.resizedInput ? this.resizedInput.value = e.resizedUrl : this.fullSizeImage && (this.fullSizeImage.value = e.resizedUrl), window.HandleCropResult && window.HandleCropResult(e.resizedUrl) }, serverFileSelected: function (e) { this.destroyCropper(), this.clearInputs(), this.dropZoneDiv.dataset.targetFullsizeImageId && (this.fullSizeImage = document.getElementById(this.dropZoneDiv.dataset.targetFullsizeImageId), this.fullSizeImage.src = e), this.dropZoneDiv.dataset.targetResizedImageId && (this.resizedImage = document.getElementById(this.dropZoneDiv.dataset.targetResizedImageId), this.resizedImage.src = e), this.dropZoneDiv.dataset.targetFullsizeInputId && (this.fullSizeInput = document.getElementById(this.dropZoneDiv.dataset.targetFullsizeInputId), this.fullSizeInput.value = e), this.dropZoneDiv.dataset.targetResizedInputId && (this.resizedInput = document.getElementById(this.dropZoneDiv.dataset.targetResizedInputId), this.resizedInput.value = e), window.ServerFileSelected && window.ServerFileSelected(e), cloudscribeDropAndCrop.closeServerBrowser(), "true" == this.dropZoneDiv.dataset.enableCrop && this.setupCropper() }, dropZoneAddedFile: function (e) { this.cropper && this.destroyCropper() }, dropZoneSending: function (t, i, d) { this.dropZoneDiv.dataset.resizeWidth && this.dropZoneDiv.dataset.resizeHeight && (d.append("maxWidth", this.dropZoneDiv.dataset.resizeWidth), d.append("maxHeight", this.dropZoneDiv.dataset.resizeHeight)), "false" == this.dropZoneDiv.dataset.resizeImage && d.append("resizeImage", !1), this.dropZoneDiv.dataset.targetPath && d.append("targetPath", this.dropZoneDiv.dataset.targetPath), "true" == e.dataset.createThumb && d.append("createThumbnail", this.dropZoneDiv.dataset.createThumb), "true" == this.dropZoneDiv.dataset.keepOriginal && d.append("keepOriginal", !0), "false" == this.dropZoneDiv.dataset.keepOriginal && d.append("keepOriginal", !1) }, dropZoneSuccess: function (e, t) { this.dropZone && this.dropZone.removeFile(e); var i = t[0].originalUrl || t[0].resizedUrl, d = t[0].resizedUrl || t[0].originalUrl, r = t[0].thumbUrl; this.resizedImage = this.dropZoneDiv.getElementsByTagName("img")[0], this.resizedImage ? this.resizedImage.src = d : this.dropZoneDiv.dataset.targetResizedImageId && (this.resizedImage = document.getElementById(this.dropZoneDiv.dataset.targetResizedImageId), this.resizedImage && (this.resizedImage.src = d)), this.dropZoneDiv.dataset.targetThumbImageId && (this.thumbImage = document.getElementById(this.dropZoneDiv.dataset.targetThumbImageId), this.thumbImage && (this.thumbImage.src = r)), this.dropZoneDiv.dataset.targetFullsizeImageId && (this.fullSizeImage = document.getElementById(this.dropZoneDiv.dataset.targetFullsizeImageId), this.fullSizeImage && (this.fullSizeImage.src = i, "true" == this.dropZoneDiv.dataset.enableCrop && this.setupCropper())), this.dropZoneDiv.dataset.targetFullsizeInputId && (this.fullSizeInput = document.getElementById(this.dropZoneDiv.dataset.targetFullsizeInputId), this.fullSizeInput && (this.fullSizeInput.value = i)), this.dropZoneDiv.dataset.targetResizedInputId && (this.resizedInput = document.getElementById(this.dropZoneDiv.dataset.targetResizedInputId), this.resizedInput && (this.resizedInput.value = d)), this.dropZoneDiv.dataset.targetThumbInputId && (this.thumbInput = document.getElementById(this.dropZoneDiv.dataset.targetThumbInputId), this.thumbInput && (this.thumbInput.value = r)) }, dropZoneError: function (e, t) { console.log(t) } }; if (t.dropZone = this._buildDropZone(t, t.dropZoneDiv), e.dataset.fileBrowseUrl && "true" == e.dataset.enableBrowseServer) { var i = document.getElementById(e.id + "-browse-server"); i && (i.classList.remove("collapse"), i.onclick = function () { cloudscribeDropAndCrop.openServerBrowser(e.dataset.fileBrowseUrl), window.FileSelectCallback = function (e) { t.serverFileSelected(e) } }) } return cloudscribeDropAndCrop.imageItems.push(t), t }, clearOneZoneItems: function (e) { for (t = 0; t < this.imageItems.length; t++)this.imageItems[t].dropZoneDiv.id == e && (this.imageItems[t].clearInputs(), this.imageItems[t].clearImages()) }, clearAllItems: function () { for (t = 0; t < this.imageItems.length; t++)this.imageItems[t].clearInputs(), this.imageItems[t].clearImages() }, _buildDropZone: function (e, t) { var i = new Dropzone("#" + t.id, { url: t.dataset.uploadUrl, method: "post", headers: { "X-CSRFToken": t.dataset.antiForgeryToken }, maxFiles: 1, acceptedFiles: t.dataset.acceptedFiles, previewTemplate: '<div class="dz-preview dz-file-preview"><div class="dz-image"><img data-dz-thumbnail /></div><div class="dz-details collapse"><div class="dz-size collapse"><span data-dz-size></span></div><div class="dz-filename collapse"><span data-dz-name></span></div></div><div class="dz-progress collapse"><span class="dz-upload" data-dz-uploadprogress></span></div><div class="dz-error-message collapse"><span data-dz-errormessage></span></div><div class="dz-success-mark collapse"></div><div class="dz-error-mark collapse"></div></div>', createImageThumbnails: !1, clickable: !0 }); return i.on("addedfile", (function (t) { e.dropZoneAddedFile && e.dropZoneAddedFile(t), window.DropZoneAddedFileHandler && window.DropZoneAddedFileHandler(t) })), i.on("sending", (function (t, i, d) { e.dropZoneSending && e.dropZoneSending(t, i, d), window.DropZoneSendingHandler && window.DropZoneSendingHandler(t, i, d) })), i.on("success", (function (t, i) { e.dropZoneSuccess && e.dropZoneSuccess(t, i, e), window.DropZoneSuccessHandler && window.DropZoneSuccessHandler(t, i, e) })), i.on("error", (function (t, i) { e.dropZoneError && e.dropZoneError(t, i), window.DropZoneErrorHandler && window.DropZoneErrorHandler(t, i) })), i } }; for (var t = 0; t < e.length; t++) { var i = e[t]; cloudscribeDropAndCrop.buildImageEditor(i) } var d = document.getElementById("dz1-clear-image"); d && (d.onclick = function () { var e = document.getElementById("imgUrlFull"); e && (e.value = ""); var t = document.getElementById("dz1Image"); let i = document.getElementById("imgUrlResized"), d = document.getElementsByClassName("cr-image"); if (t) { t.src = "/cr/images/690x517-placeholder.png", i && (i.src = "", i.value = ""); for (let e = 0; e < d.length; e++)d[e].src = "/cr/images/690x517-placeholder.png" } }) }));