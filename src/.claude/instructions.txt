# Complete Instructions for String Localization

**EXECUTION CONSTRAINT: You must personally complete this entire task without using sub-agents, Task tools, or any automated assistance. Work through each file yourself to ensure complete accuracy and proper verification.**

**Objective:** Replace all text strings in our application with string references to ResX files like sr["postal_code"]

## 1. Setup and Discovery

1.1 - Please examine the folder `cloudscribe.Core.CompiledViews.Bootstrap5\Views\[FOLDER_NAME]` and make a list of all of the .cshtml view files in that folder. Include files inside any sub-folders. Save that list to a working text file called WorkingFiles.txt  (overwriting anything already in that file).

1.2 - Create a tracking file called KeysAdded_[FOLDER_NAME].txt to maintain a running list of all new keys being added to ResX files.

## 2. File Processing Approach

2.1 - You are going to work through the WorkingFiles.txt list **one file at a time** in sequential order.

2.2 - **IMPORTANT:** Each file must be FULLY completed (steps 3.1-4.5) before moving to the next file. Do not process multiple files in parallel or skip verification steps.

2.3 - Please do not work in batches to be more efficient - stick to one file at a time and complete all steps before proceeding.

2.4 - **NO SUB-AGENTS:** You must personally read, analyze, modify, and verify every file yourself. Do not delegate any part of this work to Task agents or other automated tools.

## 3. Steps for Each File

3.1 - Read the .cshtml file and examine its contents to determine whether there is a string localizer 'sr' or 'StringLocalizer' declared near the top of the code as: `IStringLocalizer<CloudscribeCore>`

3.2 - **Skip files** that declare sr or StringLocalizer at the top of the code as `IStringLocalizer<QueryToolResources>` - mark these as "SKIPPED - QueryToolResources" in WorkingFiles.txt

3.3 - **ONLY convert references in Title Case format** - If a localizer is used, look through the file for references in the format `sr["My Title Case String"]`. Replace these with `sr["my_title_case_string"]` format.

3.4 - **Do NOT convert** string references that are already in lowercase underscore format (`sr["my_key"]`) - these are already correctly formatted.

3.5 - Also replace any free text you see in these files that is not already string-referenced (ignoring HTML comments and code comments), by creating an appropriate string reference for it.

3.6 - **Duplicate prevention check:** Before converting any Title Case string reference:
   - Check if the lowercase version would create a case-insensitive duplicate in CloudscribeCore.en-US.resx
   - If an existing key differs only in case (e.g., "Password" exists and you would create "password"), DO NOT convert it
   - Instead, keep the existing uppercase format (e.g., sr["Password"]) to maintain consistency with the existing resource key
   - Only convert to lowercase format if it would NOT create a case-insensitive duplicate

3.7 - **Before adding any key to ResX files:** Check if the key already exists in CloudscribeCore.en-US.resx to avoid creating duplicates.

3.7 - **For each NEW key:** Add it to all three ResX files if it doesn't already exist:
   - CloudscribeCore.en-US.resx (English US value)  
   - CloudscribeCore.en-GB.resx (English GB value - same as US)
   - CloudscribeCore.cy.resx (Welsh translation)

3.8 - **Key naming:** The new key should be a short but descriptive set of words with underscores representing the original string. The Value should be the original text from the cshtml file.

3.9 - **Comments:** Add this comment to each new ResX entry: `"verified - [TODAY'S DATE]"`

3.10 - **Track new keys:** Add each new key name to KeysAdded_[FOLDER_NAME].txt with the filename where it was used.

## 4. Verification Steps for Each File

4.1 - **ResX existence check:** Verify that ALL string references in the current .cshtml file exist in CloudscribeCore.en-US.resx. If any are missing, add them before proceeding.

4.2 - **Format check:** Verify that the .cshtml file contains NO string references in the old format `sr["Title Case String"]` (starting with uppercase). If any remain, fix them before proceeding.

4.3 - **Cross-reference check:** For each key used in this file, verify it exists in ALL THREE ResX files (en-US, en-GB, cy).

4.4 - **Save and mark complete:** Only after all verification steps pass, save changes to the .cshtml file and mark it as "COMPLETED" in WorkingFiles.txt.

4.5 - **Document progress:** Update KeysAdded_[FOLDER_NAME].txt with a count of new keys added for this file.

## 5. Comprehensive Final Verification

5.1 - **Extract all references:** After completing ALL files, personally extract every string reference from all processed .cshtml files and create a comprehensive list.

5.2 - **Manual verification:** For each key found, personally check that it exists in CloudscribeCore.en-US.resx. Document any missing keys.

5.3 - **Fix missing keys:** If ANY keys are missing, STOP and add them to all three ResX files before declaring completion.

5.4 - **Duplicate check:** Personally review the ResX files for any duplicate keys created and remove duplicates, keeping the original entries.

## 6. Final Quality Assurance

6.1 - **File completion check:** Verify ALL files in WorkingFiles.txt are marked as either "COMPLETED" or "SKIPPED - [REASON]"

6.2 - **Old format check:** Personally check each processed file to ensure no old format references (`sr["Title Case"]`) remain.

6.3 - **Manual audit:** Go through each completed .cshtml file one more time to verify all string references are properly formatted and exist in ResX files.

## 7. Mandatory Final Report

Provide a comprehensive final report including:
- **Files processed:** Total files completed vs total files found vs files skipped
- **Key statistics:** Total unique string keys found in all .cshtml files  
- **ResX verification:** Confirmation that you have personally verified every key exists in all 3 ResX files
- **New keys added:** Total count of new keys added during this work
- **Duplicate resolution:** Any duplicates found and resolved
- **Final verification:** Results of your personal comprehensive checks
- **Issues encountered:** Any keys that couldn't be processed and why
- **Completion confirmation:** Explicit statement that 100% of string references are properly localized

## 8. Success Criteria

This task is only complete when:
- ✅ All .cshtml files processed personally by you (no PENDING entries in WorkingFiles.txt)
- ✅ Zero missing keys (you have personally verified every key exists)  
- ✅ Zero old format references remain (you have personally checked each file)
- ✅ All three ResX files are synchronized
- ✅ Comprehensive final report provided based on your personal verification
- ✅ No duplicates exist in ResX files

## 9. Quality Assurance Reminders

9.1 - **Personal Accountability:** You are personally responsible for the accuracy and completeness of every change made.

9.2 - **No Shortcuts:** Do not assume previous work was correct - verify everything personally.

9.3 - **Complete Verification:** Every verification step must be performed by you, not assumed or automated.

9.4 - **Documentation:** Document your personal findings, not assumptions about what should be there.

**Only declare completion when ALL success criteria are personally verified and documented by you.**

---

**Final Reminder: This entire process must be completed by you personally without delegation to sub-agents or automated tools. The goal is 100% accuracy through direct personal oversight.**