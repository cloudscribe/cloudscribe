@model cloudscribe.Core.Web.ViewModels.SiteUser.ExternalLoginConfirmationViewModel
@inject IStringLocalizer<CloudscribeCore> sr
@{
    ViewData["Title"] = sr["Register"];
    ViewData["BodyClass"] = "account-section external-confirm";
    var loginProvider = ViewData["LoginProvider"];
    var subHeadMessage = string.Format(CultureInfo.CurrentUICulture, sr["associate_your_account"], loginProvider);
    var successMessage = string.Format(CultureInfo.CurrentUICulture, sr["youve_successfully_authenticated_with"], loginProvider);
}
<h1>@ViewData["Title"]</h1>
<h2>@subHeadMessage</h2>

<form asp-controller="Account" asp-action="ExternalLoginConfirmation" asp-route-returnurl='@ViewData["ReturnUrl"]' method="post" class="form-horizontal">
    <div asp-validation-summary="All" class="text-danger"></div>
    <p class="text-info">
        @Html.Raw(successMessage)
        @sr["please_enter_valid_email_for_site"]
    </p>

    @if (!string.IsNullOrWhiteSpace(Model.RegistrationPreamble))
    {
        @*<div class="registration-preamble">
            @Html.Raw(Model.RegistrationPreamble)
        </div>*@
    }

    <div class="mb-3">
        <label class="form-label" asp-for="Email">@sr["Email"]</label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="invalid-feedback"></span>
    </div>
    @if (!string.IsNullOrWhiteSpace(Model.RegistrationAgreement))
    {
        <div class="mb-3">
            <div class=" agreementcontainer">
                @Html.Raw(Model.RegistrationAgreement)
            </div>
        </div>
        <div class="mb-3">
            <input type="hidden" asp-for="AgreementRequired" />
            <div class="form-check">
                <input asp-for="AgreeToTerms" class="form-check-input" data-val-enforcetrue='@sr["you_must_agree_to_terms"]' />
                <label asp-for="AgreeToTerms" class="form-check-label">@sr["i_agree_to_terms_of_use"]</label>
                <span asp-validation-for="AgreeToTerms" class="invalid-feedback"></span>
                @Html.ValidationMessage("agreementerror", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
        <input name="AgreeToTerms" value="true" type="hidden" />
    }
    <div class="mb-3">
        <button name="submit" type="submit" class="btn btn-primary">@sr["Register"]</button>
    </div>
</form>
@section Scripts {
    <script src="~/cr/js/jquery.validate.min.js"></script>
    <script src="~/cr/js/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/cr/js/unobtrusive-validation-bs4.min.js"></script>
}
