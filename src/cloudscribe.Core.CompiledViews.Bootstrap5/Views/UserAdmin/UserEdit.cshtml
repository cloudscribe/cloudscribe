@model cloudscribe.Core.Web.ViewModels.Account.EditUserViewModel
@inject ICoreThemeHelper themeHelper
@inject IStringLocalizer<CloudscribeCore> sr
@inject ISummernoteOptionsResolver summernoteOptionsResolver
@inject ICkeditorOptionsResolver ckeditorOptionsResolver
@{
    var summernoteOptions = await summernoteOptionsResolver.GetSummernoteOptions();
    var ckOptions = await ckeditorOptionsResolver.GetCkeditorOptions();
    var themeSettings = themeHelper.GetThemeSettings();
    if (themeSettings.AdminSideNavExpanded) { ViewData["SideNavToggle"] = "show"; }
    ViewData["SideNavVisible"] = true;

}
@section Styles {
    <partial name="UserEditStylePartial" />
    <link href="/cr/css/summernote-bs5.min.css" rel="stylesheet">
}
<h2>@ViewData["Title"]</h2>
@if (Model.UserId != Guid.Empty && !Model.AccountApproved)
{
    <form class="form-inline" role="form" asp-controller="UserAdmin" asp-action="ApproveUserAccount" asp-route-returnurl='@ViewData["ReturnUrl"]'>
        <input asp-for="UserId" type="hidden" />
        <input asp-for="SiteId" type="hidden" />
        <div class="row mb-4 mt-3 gx-3 align-items-center">
            <div class="col-md-2 w-auto">
                <div class="form-check">
                    <input type="checkbox" asp-for="SendApprovalEmail" class="form-check-input" />
                    <label asp-for="SendApprovalEmail" class="form-check-label">@sr["Send Email Notification"]</label>
                </div>
            </div>
            <div class="ms-0 col-md-3 w-auto">
                <button type="submit" class="btn btn-primary">@sr["Approve this account"]</button>
            </div>
        </div>
    </form>
}


<form data-submit-once="true" class="form-horizontal" role="form" asp-controller="UserAdmin" asp-action="UserEdit">
    <input asp-for="UserId" type="hidden" />
    <input asp-for="SiteId" type="hidden" />
    <div class="row">
        <div class="col-md-2">
            <a asp-controller="UserAdmin" asp-action="UserActivity" asp-route-siteid="@Model.SiteId" asp-route-userid="@Model.UserId" title="Activty">
                <img class="pull-right" gravatar-email="@Model.Email" gravatar-size="60" gravatar-enabled="@themeSettings.AllowGravatar" override-url="@Model.AvatarUrl" disabled-default-url="@themeSettings.DefaultAvatarUrl" />
            </a>
        </div>
        <div class="col-md-10 ">
            <div class="mb-3">
                <div class="form-check">
                    <input asp-for="EmailConfirmed" class="form-check-input" />
                    <label asp-for="EmailConfirmed" class="form-check-label">@sr["Email Confirmed"]</label>
                </div>
            </div>
            <div class="mb-3">
                <div class="form-check">
                    <input asp-for="IsLockedOut" class="form-check-input" />
                    <label asp-for="IsLockedOut" class="form-check-label">@sr["Account Locked"]</label>
                </div>
            </div>
        </div>
    </div>
    <div class="mb-3">
        <label class="control-label">
            <a asp-controller="UserAdmin" asp-action="UserActivity" asp-route-siteid="@Model.SiteId" asp-route-userid="@Model.UserId" title="Activty">@sr["View User Activity"]</a>
        </label>
    </div>
    @if (Model.UserId != Guid.Empty)
    {
        <div class="mb-3">
            
            <label class="form-label" asp-for="UserId">@sr["UserId"]</label>
            -
            <label class="control-label">@Model.UserId.ToString()</label>
        </div>
    }
    
    @if (Model.UserId != Guid.Empty && Model.TwoFactorEnabled)
    {
        <div class="mb-3">
            <label class="form-label" for="TFA">@sr["Two Factor Authentication"]</label>
            -
            <label id="TFA" class="control-label">@sr["Enabled"]</label>
            <br />
             <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#confirmDisable2FA">
                @sr["Disable Two Factor Auth."]
            </button>
        </div>
    }
    else
    {
         <div class="mb-3">
            <label class="form-label" for="TFA">@sr["Two Factor Authentication"]</label>
            -
            <label id="TFA" class="control-label">@sr["Disabled"]</label>
        </div>
    }

    <div class="mb-3">
        <label class="form-label" asp-for="Email">@sr["Email"]</label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="invalid-feedback"></span>
    </div>
    <div class="mb-3">
        <label class="form-label" asp-for="Username">@sr["Username"]</label>
        <input asp-for="Username" class="form-control"
               data-remote-validate-onblur="true"
               data-error-target-id="spnUserNameWarn"
               data-additional-input-ids="UserId"
               data-validation-url='@Url.Action("UsernameAvailable", "Account")' />
        <span asp-validation-for="Username" class="invalid-feedback"></span>
        <span id="spnUserNameWarn" class="text-danger" data-error-message='@sr["Username is already in use"]'></span>
        @Html.ValidationMessage("usernameerror", new { @class = "text-danger" })
    </div>
    <div class="mb-3">
        <label class="form-label" asp-for="DisplayName">@sr["Display Name"]</label>
        <input asp-for="DisplayName" class="form-control" />
        <span asp-validation-for="DisplayName" class="invalid-feedback"></span>
    </div>
    <div class="mb-3">
        <label class="form-label" asp-for="FirstName">@sr["First Name"]</label>
        <input asp-for="FirstName" class="form-control" />
    </div>
    <div class="mb-3">
        <label class="form-label" asp-for="LastName">@sr["Last Name"]</label>
        <input asp-for="LastName" class="form-control" />
    </div>
    <div class="mb-3">
        <label class="form-label" asp-for="DateOfBirth">@sr["Date of Birth"]</label>
        <input name="DateOfBirth" value="@(Model.DateOfBirth.HasValue ? Model.DateOfBirth.Value.ToString("d") : string.Empty)"
               class="form-control"
               data-bs-datepicker="true"
               data-bs-datepicker-debug="false"
               data-bs-datepicker-keepOpen="false"
               data-bs-datepicker-allowInputToggle="true"
               data-bs-datepicker-viewMode="years"
               data-bs-datepicker-usecurrent="false"
               data-bs-datepicker-format="L"
               data-bs-datepicker-locale="@System.Globalization.CultureInfo.CurrentCulture.Name"
               data-bs-datepicker-mindate="@DateTime.UtcNow.AddYears(-120).ToString("O")"
               data-bs-datepicker-maxdate="@DateTime.UtcNow.AddYears(-10).ToString("O")"
               data-bs-datepicker-viewDate="@DateTime.UtcNow.AddYears(-10).ToString("O")" />
        <span asp-validation-for="DateOfBirth" class="invalid-feedback"></span>
    </div>
    <div class="mb-3">
        <label class="form-label" asp-for="TimeZoneId">@sr["Time Zone"]</label>
        <select asp-for="TimeZoneId" asp-items="Model.AllTimeZones" class="form-control"></select>
        <span asp-validation-for="TimeZoneId" class="invalid-feedback"></span>
    </div>
    <div class="mb-3">
        <label class="form-label" asp-for="WebSiteUrl">@sr["Website Url"]</label>
        <input asp-for="WebSiteUrl" class="form-control" />
    </div>
    <partial name="UserEditMiddlePartial" model="Model" />
    <div class="mb-3">
        <label class="form-label" asp-for="Comment"></label>
        <textarea asp-for="Comment" rows="5"
            data-summernote-unobtrusive=""
            data-summernote-config-url="@summernoteOptions.CustomConfigPath"
            data-summernote-toolbar-config-url="@summernoteOptions.CustomToolbarConfigPath"
            data-summernote-config-language="@summernoteOptions.LanguageCode"
            data-summernote-config-dropfileuploadurl="@summernoteOptions.DropFileUrl"
            data-summernote-config-filebrowserurl="@summernoteOptions.FileBrowseUrl"
            data-summernote-config-imagebrowseurl="@summernoteOptions.ImageBrowseUrl">
        </textarea>
    </div>

    <div class="mb-3">
        <button id="btnSave" type="submit" class="btn btn-primary" data-enabled-text='@sr["Save"]' data-disabled-text='@sr["Working..."]'>@sr["Save"]</button>
        @if (Model.UserId != Guid.Empty)
        {

            <button type="button" class="ms-2 btn btn-danger" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal">
                @sr["Delete"]
            </button>
            @Html.ValidationMessage("deleteerror", new { @class = "text-danger" })
            <a class="ms-2" asp-controller="UserAdmin" asp-action="ChangeUserPassword" asp-route-siteid="@Model.SiteId" asp-route-userid="@Model.UserId">@sr["Change Password"]</a>
        }
    </div>
    <div asp-validation-summary="All" class="text-danger"></div>
</form>
@if (Model.UserId != Guid.Empty)
{
    <form id="deleteform" class="form-inline" asp-controller="UserAdmin" asp-action="UserDelete">
        <input asp-for="SiteId" type="hidden" />
        <input asp-for="UserId" type="hidden" />
        <div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteHeading">
            <div class="modal-dialog modal-sm" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="confirmDeleteHeading">@sr["Confirm Delete"]</h4>
                        <button type="button" data-bs-dismiss="modal" class="btn-close" aria-label='@sr["Close"]'></button>
                    </div>
                    <div class="modal-body">
                        @string.Format(sr["Are you sure you want to delete the user {0}? You cannot undo this action."], Model.DisplayName)
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-bs-dismiss="modal">@sr["Cancel"]</button>
                        <input type="submit" value='@sr["Delete"]' class="btn btn-danger btn-ok" />
                    </div>
                </div>
            </div>
        </div>
    </form>

    <form id="deleteform" class="form-inline" asp-controller="Manage" asp-action="Disable2faForUser">
        <input asp-for="UserId" type="hidden" />
        <input name="returnUrl" type="hidden" value="@Context.Request.GetCurrentFullUrlWithQueryString()">

        <div class="modal fade" id="confirmDisable2FA" tabindex="-1" role="dialog" aria-labelledby="confirmDisable2FAHeading">
            <div class="modal-dialog modal-sm" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="confirmDisable2FAHeading">@sr["Confirm Disable Two Factor Authentication"]</h4>
                        <button type="button" data-bs-dismiss="modal" class="btn-close" aria-label='@sr["Close"]'></button>
                    </div>
                    <div class="modal-body">
                        @string.Format(sr["Are you sure you want to disable two factor authentication for the user {0}? Disabling 2FA does not change any stored keys used by this user's authenticator apps."], Model.DisplayName)
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-bs-dismiss="modal">@sr["Cancel"]</button>
                        <input type="submit" value='@sr["Disable"]' class="btn btn-danger btn-ok" />
                    </div>
                </div>
            </div>
        </div>
    </form>

}

@if (Model.UserId != Guid.Empty)
{
    <form data-submit-once="true" class="form-inline" role="form" asp-controller="UserAdmin" asp-action="SendPasswordResetEmail" asp-route-returnurl='@ViewData["ReturnUrl"]'>
        <input asp-for="UserId" type="hidden" />
        <input asp-for="SiteId" type="hidden" />

        <div class="mb-3 mt-2">
            <span>@sr["Password Reset Email"]</span>
            <button type="submit" id="btn_resetpwd" class="ms-2 btn btn-primary">@sr["Send"]</button>
        </div>
    </form>
}

<partial name="UserRoles" model="Model" />
<partial name="UserClaims" model="Model" />
@section SideNav {
    <partial name="AdminSideNav" />
}
@section Toolbar{
    <partial name="AdminSideNavToggle" />
}
@section Scripts {
    <partial name="AdminSideNavScripts" />
    <partial name="UserEditScriptsPartial" />
    <partial name="SummernoteScripts" />
}