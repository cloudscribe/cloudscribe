$((async function () { let e, n, t = $("textarea[data-summernote-unobtrusive]").toArray(), a = [], o = 0, r = 0; if (t) { for (elem of t) { let g = $(elem).data("summernote-unobtrusive"), f = $(elem).data("summernote-config-url"), h = $(elem).data("summernote-toolbar-config-url"), p = $(elem).data("summernote-config-language"); if (a.push({ number: r, url: $(elem).data("summernote-config-dropfileuploadurl") }), n = $('[name="__RequestVerificationToken"]:first').val(), g = g ? 'textarea[data-summernote-unobtrusive="' + g + '"]' : 'textarea[data-summernote-unobtrusive=""]', f) { let b, v; async function i(e) { await fetch(e, { headers: { "Cache-Control": "no-cache, no-store" } }).then((e => e.json())).then((e => { v = e })) } async function s(e) { await fetch(e, { headers: { "Cache-Control": "no-cache, no-store" } }).then((e => e.json())).then((e => { b = e, b.lang = p || "en-US" })) } function m() { $(g).each((function (n) { $(g).eq(n).summernote({ callbacks: { onImageUpload: function (t) { o = n, e = g, l(t) } }, toolbar: v, ...b }), $(g).on("summernote.codeview.change", (function (e, n, t) { var a = $(this).nextAll(".note-editor.note-frame.card.codeview"), o = a.find(".note-editable.card-block"), r = a.prev(g); o.html(n), r.val(n) })) })) } await s(f), await i(h), await m() } r++ } function l(e) { if (content = e, e && e.length > 0) for (var n = 0; n < e.length; n++) { var t = e[n].name, a = t.substring(0, t.lastIndexOf(".")) || t, o = t.substring(t.lastIndexOf(".") + 1).toLowerCase(), r = a + "_" + (new Date).toISOString().replace(/:|\./g, "-").substring(0, 21) + "." + o; c(u(e[n], r)) } } function u(e, n) { return new File([e], n, { type: e.type, lastModified: e.lastModified }) } function c(e) { switch (e.type) { case "image/jpeg": case "image/jpg": case "image/gif": case "image/png": case "image/svg+xml": var t = new FormData; t.append("__RequestVerificationToken", n), t.append(e.name, e); let r = a.find((e => e.number === o)); $.ajax({ type: "POST", processData: !1, contentType: !1, dataType: "json", url: r.url, data: t, success: d }) } } function d(n, t, a) { n[0].errorMessage ? alert(n[0].errorMessage) : n[0].resizedUrl ? e ? $(e).eq(o).summernote("insertImage", n[0].resizedUrl, n[0].name) : $(summernoteInstance).eq(o).summernote("insertImage", n[0].resizedUrl, n[0].name) : e ? $(e).eq(o).summernote("insertImage", n[0].originalUrl, n[0].name) : $(summernoteInstance).eq(o).summernote("insertImage", n[0].originalUrl, n[0].name) } } })), window.handleMessageFromChild = function (e) { var n = document.querySelectorAll(".note-modal"); $("#" + e.instance).summernote("insertImage", e.url, e.filename), n && ($(n).modal("hide"), $(document.body).removeAttr("style"), $(document.body).removeAttr("padding-right"), $(".modal-backdrop").toggle()) };