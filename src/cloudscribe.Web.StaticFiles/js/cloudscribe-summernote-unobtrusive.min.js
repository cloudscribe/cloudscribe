$((async function () { let e, t, n = $("textarea[data-summernote-unobtrusive]").toArray(), a = [], o = 0, r = 0; if (n) { for (elem of n) { let g = $(elem).data("summernote-unobtrusive"), f = $(elem).data("summernote-config-url"), p = $(elem).data("summernote-toolbar-config-url"), h = $(elem).data("summernote-config-language"); if (a.push({ number: r, url: $(elem).data("summernote-config-dropfileuploadurl") }), t = $('[name="__RequestVerificationToken"]:first').val(), g = g ? 'textarea[data-summernote-unobtrusive="' + g + '"]' : 'textarea[data-summernote-unobtrusive=""]', f) { let b, v; async function i(e) { await fetch(e, { headers: { "Cache-Control": "no-cache, no-store" } }).then((e => e.json())).then((e => { v = e })) } async function s(e) { await fetch(e, { headers: { "Cache-Control": "no-cache, no-store" } }).then((e => e.json())).then((e => { b = e, b.lang = h || "en-US" })) } function m() { $(g).each((function (t) { $(g).eq(t).summernote({ callbacks: { onImageUpload: function (n) { o = t, e = g, l(n) }, onInit: function () { setTimeout((function () { var e = $(g).eq(t).parent().find('.note-toolbar button[data-bs-original-title*="Insert Horizontal Rule"]'); e.length && (e.off(), e.on("click", (function (e) { e.preventDefault(), e.stopPropagation(), e.stopImmediatePropagation(), console.log("HR button clicked - inserting smart <hr>"); var n = $(g).eq(t), a = n.summernote("createRange"); if (a) { var o = $(a.sc).closest("p"); !o.length || "<br>" !== o.html() && "" !== o.html().trim() ? n.summernote("pasteHTML", "<hr>") : o.replaceWith("<hr><p><br></p>") } else n.summernote("pasteHTML", "<hr>"); return !1 }))) }), 50) } }, toolbar: v, ...b }), $(g).on("summernote.codeview.change", (function (e, t, n) { if ($(g).summernote("codeview.isActivated")) { var a = $(this).nextAll(".note-editor.note-frame.card.codeview"), o = a.find(".note-editable.card-block"), r = a.prev(g); o.html(t), r.val(t) } })) })) } await s(f), await i(p), await m() } r++ } function l(e) { if (content = e, e && e.length > 0) for (var t = 0; t < e.length; t++) { var n = e[t].name, a = n.substring(0, n.lastIndexOf(".")) || n, o = n.substring(n.lastIndexOf(".") + 1).toLowerCase(), r = a + "_" + (new Date).toISOString().replace(/:|\./g, "-").substring(0, 21) + "." + o; c(u(e[t], r)) } } function u(e, t) { return new File([e], t, { type: e.type, lastModified: e.lastModified }) } function c(e) { switch (e.type) { case "image/jpeg": case "image/jpg": case "image/gif": case "image/png": case "image/svg+xml": var n = new FormData; n.append("__RequestVerificationToken", t), n.append(e.name, e); let r = a.find((e => e.number === o)); $.ajax({ type: "POST", processData: !1, contentType: !1, dataType: "json", url: r.url, data: n, success: d }) } } function d(t, n, a) { t[0].errorMessage ? alert(t[0].errorMessage) : t[0].resizedUrl ? e ? $(e).eq(o).summernote("insertImage", t[0].resizedUrl, t[0].name) : $(summernoteInstance).eq(o).summernote("insertImage", t[0].resizedUrl, t[0].name) : e ? $(e).eq(o).summernote("insertImage", t[0].originalUrl, t[0].name) : $(summernoteInstance).eq(o).summernote("insertImage", t[0].originalUrl, t[0].name) } } })), window.handleMessageFromChild = function (e) { var t = document.querySelectorAll(".note-modal"); $("#" + e.instance).summernote("insertImage", e.url, e.filename), t && ($(t).modal("hide"), $(document.body).removeAttr("style"), $(document.body).removeAttr("padding-right"), $(".modal-backdrop").toggle()) };