$(async function () { let e, t, n = $("textarea[data-summernote-unobtrusive]").toArray(), a = [], o = 0, r = 0; if (n) { for (elem of n) { let n = $(elem).data("summernote-unobtrusive"), u = $(elem).data("summernote-config-url"), c = $(elem).data("summernote-toolbar-config-url"), d = $(elem).data("summernote-config-language"); if (a.push({ number: r, url: $(elem).data("summernote-config-dropfileuploadurl") }), t = $('[name="__RequestVerificationToken"]:first').val(), n = n ? 'textarea[data-summernote-unobtrusive="' + n + '"]' : 'textarea[data-summernote-unobtrusive=""]', u) { let t, a; async function i(e) { await fetch(e, { headers: { "Cache-Control": "no-cache, no-store" } }).then(e => e.json()).then(e => { a = e }) } async function s(e) { await fetch(e, { headers: { "Cache-Control": "no-cache, no-store" } }).then(e => e.json()).then(e => { (t = e).lang = d || "en-US" }) } function m() { $(n).each(function (r) { $(n).eq(r).summernote({ callbacks: { onImageUpload: function (t) { o = r, e = n, l(t) }, onDialogShown: function(t) { requestAnimationFrame(function() { var e = $(".modal:visible .sn-checkbox-open-in-new-window input[type=checkbox]"); e.length > 0 ? e.prop("checked", !1) : setTimeout(function() { var e = $(".modal:visible .sn-checkbox-open-in-new-window input[type=checkbox]"); e.length > 0 && e.prop("checked", !1) }, 10) }) } }, toolbar: a, ...t }), $(n).on("summernote.codeview.change", function (e, t, a) { if ($(n).summernote("codeview.isActivated")) { var o = $(this).nextAll(".note-editor.note-frame.card.codeview"), r = o.find(".note-editable.card-block"), i = o.prev(n); r.html(t), i.val(t) } }) }) } await s(u), await i(c), await m() } r++ } function l(e) { if (content = e, e && e.length > 0) for (var t = 0; t < e.length; t++) { var n = e[t].name, a = n.substring(0, n.lastIndexOf(".")) || n, o = n.substring(n.lastIndexOf(".") + 1).toLowerCase(), r = a + "_" + (new Date).toISOString().replace(/:|\./g, "-").substring(0, 21) + "." + o; c(u(e[t], r)) } } function u(e, t) { return new File([e], t, { type: e.type, lastModified: e.lastModified }) } function c(e) { switch (e.type) { case "image/jpeg": case "image/jpg": case "image/gif": case "image/png": case "image/svg+xml": var n = new FormData; n.append("__RequestVerificationToken", t), n.append(e.name, e); let r = a.find(e => e.number === o); $.ajax({ type: "POST", processData: !1, contentType: !1, dataType: "json", url: r.url, data: n, success: d }) } } function d(t, n, a) { t[0].errorMessage ? alert(t[0].errorMessage) : t[0].resizedUrl ? e ? $(e).eq(o).summernote("insertImage", t[0].resizedUrl, t[0].name) : $(summernoteInstance).eq(o).summernote("insertImage", t[0].resizedUrl, t[0].name) : e ? $(e).eq(o).summernote("insertImage", t[0].originalUrl, t[0].name) : $(summernoteInstance).eq(o).summernote("insertImage", t[0].originalUrl, t[0].name) } } }), window.handleMessageFromChild = function (e) { var t = document.querySelectorAll(".note-modal"); $("#" + e.instance).summernote("insertImage", e.url, e.filename), t && ($(t).modal("hide"), $(document.body).removeAttr("style"), $(document.body).removeAttr("padding-right"), $(".modal-backdrop").toggle()) };