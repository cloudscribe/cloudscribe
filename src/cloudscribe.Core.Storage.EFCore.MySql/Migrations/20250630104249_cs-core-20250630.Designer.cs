// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cloudscribe.Core.Storage.EFCore.MySql;

#nullable disable

namespace cloudscribe.Core.Storage.EFCore.MySql.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    [Migration("20250630104249_cs-core-20250630")]
    partial class cscore20250630
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("cloudscribe.Core.Models.BlockedPermittedIpAddressesModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsPermitted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.Property<Guid>("SiteId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("BlockedPermittedIpAddresses");
                });

            modelBuilder.Entity("cloudscribe.Core.Models.Geography.GeoCountry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ISOCode2")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("ISOCode3")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ISOCode2");

                    b.ToTable("cs_GeoCountry", (string)null);
                });

            modelBuilder.Entity("cloudscribe.Core.Models.Geography.GeoZone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("CountryId");

                    b.ToTable("cs_GeoZone", (string)null);
                });

            modelBuilder.Entity("cloudscribe.Core.Models.SiteHost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("HostName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("SiteId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("HostName");

                    b.HasIndex("SiteId");

                    b.ToTable("cs_SiteHost", (string)null);
                });

            modelBuilder.Entity("cloudscribe.Core.Models.SiteRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("NormalizedRoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("SiteId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("NormalizedRoleName");

                    b.HasIndex("SiteId");

                    b.ToTable("cs_Role", (string)null);
                });

            modelBuilder.Entity("cloudscribe.Core.Models.SiteSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AccountApprovalEmailCsv")
                        .HasColumnType("longtext");

                    b.Property<string>("AddThisDotComUsername")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AliasId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<bool>("AllowNewRegistration")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AllowPersistentLogin")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AllowUserToChangeEmail")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CaptchaOnLogin")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CaptchaOnRegistration")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CompanyCountry")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CompanyFax")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CompanyLocality")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("CompanyPhone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CompanyPostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CompanyPublicEmail")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyRegion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CompanyStreetAddress")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("CompanyStreetAddress2")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("CompanyWebsite")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("CookiePolicySummary")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DefaultEmailFromAddress")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DefaultEmailFromAlias")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("DisableDbAuth")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DkimDomain")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DkimPrivateKey")
                        .HasColumnType("longtext");

                    b.Property<string>("DkimPublicKey")
                        .HasColumnType("longtext");

                    b.Property<string>("DkimSelector")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("EmailApiEndpoint")
                        .HasColumnType("longtext");

                    b.Property<string>("EmailApiKey")
                        .HasColumnType("longtext");

                    b.Property<string>("EmailSenderName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("SmtpMailSender");

                    b.Property<string>("FacebookAppId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FacebookAppSecret")
                        .HasColumnType("longtext");

                    b.Property<string>("FooterContent")
                        .HasColumnType("longtext");

                    b.Property<string>("ForcedCulture")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ForcedUICulture")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("GoogleAnalyticsProfileId")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("GoogleClientId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("GoogleClientSecret")
                        .HasColumnType("longtext");

                    b.Property<string>("HeaderContent")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDataProtected")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsServerAdminSite")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LdapDomain")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("LdapPort")
                        .HasColumnType("int");

                    b.Property<string>("LdapRootDN")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LdapServer")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("LdapUseSsl")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LdapUserDNFormat")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LdapUserDNKey")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LoginInfoBottom")
                        .HasColumnType("longtext");

                    b.Property<string>("LoginInfoTop")
                        .HasColumnType("longtext");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("MaxInvalidPasswordAttempts")
                        .HasColumnType("int");

                    b.Property<string>("MaximumInactivityInMinutes")
                        .HasColumnType("longtext");

                    b.Property<string>("MicrosoftClientId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MicrosoftClientSecret")
                        .HasColumnType("longtext");

                    b.Property<int>("MinRequiredPasswordLength")
                        .HasColumnType("int");

                    b.Property<string>("OidConnectAppId")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OidConnectAppSecret")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OidConnectAuthority")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OidConnectDisplayName")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("OidConnectScopesCsv")
                        .HasColumnType("longtext");

                    b.Property<int>("PasswordExpiresDays")
                        .HasColumnType("int");

                    b.Property<int>("PasswordExpiryWarningDays")
                        .HasColumnType("int");

                    b.Property<string>("PreferredHostName")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("PrivacyPolicy")
                        .HasColumnType("longtext");

                    b.Property<bool>("PwdRequireDigit")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PwdRequireLowercase")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PwdRequireNonAlpha")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PwdRequireUppercase")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RecaptchaPrivateKey")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RecaptchaPublicKey")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RegRestrictionTld")
                        .HasColumnType("longtext");

                    b.Property<string>("RegistrationAgreement")
                        .HasColumnType("longtext");

                    b.Property<string>("RegistrationPreamble")
                        .HasColumnType("longtext");

                    b.Property<bool>("Require2FA")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RequireApprovalBeforeLogin")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RequireConfirmedEmail")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RequireConfirmedPhone")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RequireCookieConsent")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RequiresQuestionAndAnswer")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ShowSiteNameLink")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SignEmailWithDkim")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SingleBrowserSessions")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SiteFolderName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("");

                    b.Property<bool>("SiteIsClosed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SiteIsClosedMessage")
                        .HasColumnType("longtext");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SmsClientId")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SmsFrom")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SmsSecureToken")
                        .HasColumnType("longtext");

                    b.Property<string>("SmtpPassword")
                        .HasColumnType("longtext");

                    b.Property<int>("SmtpPort")
                        .HasColumnType("int");

                    b.Property<string>("SmtpPreferredEncoding")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("SmtpRequiresAuth")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SmtpServer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("SmtpUseSsl")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SmtpUser")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("TermsUpdatedUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Theme")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TimeZoneId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TwitterConsumerKey")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TwitterConsumerSecret")
                        .HasColumnType("longtext");

                    b.Property<bool>("UseEmailForLogin")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("UseInvisibleRecaptcha")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("AliasId");

                    b.HasIndex("SiteFolderName");

                    b.ToTable("cs_Site", (string)null);
                });

            modelBuilder.Entity("cloudscribe.Core.Models.SiteUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("AccountApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("AgreementAcceptedUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuthorBio")
                        .HasColumnType("longtext");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BrowserKey")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("CanAutoLockout")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("DisplayInMemberList")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("EmailConfirmSentUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsLockedOut")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastLoginUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("LastPasswordChangeUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LockoutEndDateUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("MustChangePwd")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NewEmail")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("NewEmailApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NormalizedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RolesChanged")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Signature")
                        .HasColumnType("longtext");

                    b.Property<Guid>("SiteId")
                        .HasColumnType("char(36)");

                    b.Property<string>("TimeZoneId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("WebSiteUrl")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DisplayName");

                    b.HasIndex("NormalizedEmail");

                    b.HasIndex("NormalizedUserName");

                    b.HasIndex("SiteId");

                    b.ToTable("cs_User", (string)null);
                });

            modelBuilder.Entity("cloudscribe.Core.Models.UserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ClaimType")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<Guid>("SiteId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ClaimType");

                    b.HasIndex("SiteId");

                    b.HasIndex("UserId");

                    b.ToTable("cs_UserClaim", (string)null);
                });

            modelBuilder.Entity("cloudscribe.Core.Models.UserLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("CaptureCount")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Continent")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Country")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("FirstCaptureUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("HostName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("IpAddressLong")
                        .HasColumnType("bigint");

                    b.Property<string>("Isp")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("LastCaptureUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Region")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("SiteId")
                        .HasColumnType("char(36)");

                    b.Property<string>("TimeZone")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("IpAddress");

                    b.HasIndex("UserId");

                    b.ToTable("cs_UserLocation", (string)null);
                });

            modelBuilder.Entity("cloudscribe.Core.Models.UserLogin", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SiteId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("UserId", "SiteId", "LoginProvider", "ProviderKey");

                    b.HasIndex("SiteId");

                    b.HasIndex("UserId");

                    b.ToTable("cs_UserLogin", (string)null);
                });

            modelBuilder.Entity("cloudscribe.Core.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("cs_UserRole", (string)null);
                });

            modelBuilder.Entity("cloudscribe.Core.Models.UserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SiteId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "SiteId", "LoginProvider", "Name");

                    b.HasIndex("SiteId");

                    b.HasIndex("UserId");

                    b.ToTable("cs_UserToken", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
